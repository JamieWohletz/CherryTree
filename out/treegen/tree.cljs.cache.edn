;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name treegen.tree, :imports nil, :requires {treegen.util treegen.util}, :uses {sort-middle treegen.util, clamp treegen.util, rand-num-in-range treegen.util, rand-int-in-range treegen.util}, :defs {max-num-child-nodes {:name treegen.tree/max-num-child-nodes, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 10, :column 1, :end-line 10, :end-column 25, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 10, :column 6, :end-line 10, :end-column 25}}, angle-arc-range {:name treegen.tree/angle-arc-range, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 13, :column 1, :end-line 13, :end-column 21, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 13, :column 6, :end-line 13, :end-column 21}}, generate-naked-tree {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 31, :column 7, :end-line 31, :end-column 26, :arglists (quote ([num-levels]))}, :name treegen.tree/generate-naked-tree, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 26, :method-params ([num-levels]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([num-levels]))}, min-num-child-nodes {:name treegen.tree/min-num-child-nodes, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 9, :column 1, :end-line 9, :end-column 25, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 9, :column 6, :end-line 9, :end-column 25}}, generate-tree* {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 81, :column 7, :end-line 81, :end-column 21, :arglists (quote ([num-levels]))}, :name treegen.tree/generate-tree*, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 21, :method-params ([num-levels]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([num-levels]))}, add-property-to-tree {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 41, :column 7, :end-line 41, :end-column 27, :arglists (quote ([{:keys [children], :as tree} property root-value get-children-values]))}, :name treegen.tree/add-property-to-tree, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 27, :method-params ([p__5823 property root-value get-children-values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 4, :fn-var true, :arglists (quote ([{:keys [children], :as tree} property root-value get-children-values]))}, gen-lengths {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 60, :column 7, :end-line 60, :end-column 18, :arglists (quote ([{:keys [parent-value num-children parent children], :as args}]))}, :name treegen.tree/gen-lengths, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 18, :method-params ([p__5833]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [parent-value num-children parent children], :as args}]))}, generate-tree {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 90, :column 7, :end-line 90, :end-column 20, :arglists (quote ([num-levels]))}, :name treegen.tree/generate-tree, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 20, :method-params ([num-levels]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([num-levels]))}, slice-into-random-parts {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([total num-slices min-slice-percent]))}, :name treegen.tree/slice-into-random-parts, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 30, :method-params ([total num-slices min-slice-percent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([total num-slices min-slice-percent]))}, get-num-child-nodes {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 16, :column 7, :end-line 16, :end-column 26, :arglists (quote ([]))}, :name treegen.tree/get-num-child-nodes, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-thickness {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 66, :column 7, :end-line 66, :end-column 20, :arglists (quote ([tree root-thickness]))}, :name treegen.tree/add-thickness, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 20, :method-params ([tree root-thickness]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tree root-thickness]))}, add-length {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 63, :column 7, :end-line 63, :end-column 17, :arglists (quote ([tree root-length]))}, :name treegen.tree/add-length, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 17, :method-params ([tree root-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tree root-length]))}, gen-length {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 54, :column 7, :end-line 54, :end-column 17, :arglists (quote ([{:keys [parent-value num-children parent children]}]))}, :name treegen.tree/gen-length, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 17, :method-params ([p__5828]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [parent-value num-children parent children]}]))}, max-thickness-difference {:name treegen.tree/max-thickness-difference, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 12, :column 1, :end-line 12, :end-column 30, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 12, :column 6, :end-line 12, :end-column 30}}, max-length-difference {:name treegen.tree/max-length-difference, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 11, :column 1, :end-line 11, :end-column 27, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 11, :column 6, :end-line 11, :end-column 27}}, generate-child-nodes {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 27, :column 7, :end-line 27, :end-column 27, :arglists (quote ([create-node]))}, :name treegen.tree/generate-child-nodes, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 27, :method-params ([create-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([create-node]))}, add-angle {:protocol-inline nil, :meta {:file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :line 72, :column 7, :end-line 72, :end-column 16, :arglists (quote ([tree root-angle]))}, :name treegen.tree/add-angle, :variadic false, :file "C:\\Users\\Jamie Wohletz\\Documents\\Code\\CherryTree\\app\\scripts\\treegen\\tree.cljs", :end-column 16, :method-params ([tree root-angle]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tree root-angle]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:children :thickness :parent :angle :level :parent-value :length :num-children}, :order [:children :level :parent-value :num-children :parent :thickness :length :angle]}, :doc nil}